# Generated by Django 3.1.5 on 2021-09-08 11:16

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(blank=True, help_text='Country substates/county or sub-province description.', max_length=30, null=True, verbose_name='Sub-State / County / District')),
                ('city_name', models.CharField(help_text='City or Town name description.', max_length=30, verbose_name='City or Town')),
                ('latitude', models.DecimalField(decimal_places=8, help_text='The Latitude Coordinate.', max_digits=12, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=8, help_text='The Longitude Coordinate.', max_digits=12, verbose_name='Longitude')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_mod', models.DateField(default=django.utils.timezone.now, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'ordering': ['city_name'],
            },
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Continent official name description.', max_length=15, verbose_name='Continent Name')),
                ('code', models.CharField(help_text='Continent ISO3166-2 description.', max_length=2, verbose_name='Continent Code')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_mod', models.DateField(default=django.utils.timezone.now, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name_plural': 'Continents',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Country official name description.', max_length=50, verbose_name='Country Name')),
                ('iso3', models.CharField(help_text='Country ISO3166-3 code description.', max_length=3, verbose_name='ISO3166-3 Code')),
                ('iso2', models.CharField(help_text='Country ISO3166-2 code description.', max_length=3, verbose_name='ISO3166-2 Code')),
                ('numeric_code', models.IntegerField(help_text='Country ISO3166-32 numeric_code description.', verbose_name='ISO3166-3 numeric_code')),
                ('phone_code', models.CharField(help_text='Country Phone Area Calling Code (+) description.', max_length=10, verbose_name='Phone Area Calling Code')),
                ('capital', models.CharField(help_text='Country capital city name description.', max_length=30, verbose_name='Capital City')),
                ('currency', models.CharField(help_text='Country currency name description.', max_length=30, verbose_name='Country Currency')),
                ('currency_symbol', models.CharField(help_text='Country currency symbol description.', max_length=30, verbose_name='Country Currency Symbol')),
                ('tld', models.CharField(help_text='Country top level domain description.', max_length=30, verbose_name='Country TLD')),
                ('native', models.CharField(help_text='Country native name description.', max_length=30, verbose_name='Country native name')),
                ('latitude', models.DecimalField(decimal_places=8, help_text='The Latitude Coordinate.', max_digits=12, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=8, help_text='The Longitude Coordinate.', max_digits=12, verbose_name='Longitude')),
                ('emoji', models.CharField(help_text='Country emoji name description.', max_length=2, verbose_name='Country emoji')),
                ('emojiU', models.CharField(help_text='Country emoji unicode character description.', max_length=20, verbose_name='Country emoji unicode')),
                ('flag_image', models.ImageField(blank=True, help_text='Official flag of country', null=True, upload_to='flags/', verbose_name='Flag Image')),
                ('map_image', models.ImageField(blank=True, help_text='Political map image of country', null=True, upload_to='maps/', verbose_name='Map Image')),
                ('area', models.DecimalField(blank=True, decimal_places=2, help_text='The Area in square km.', max_digits=15, null=True, verbose_name='Area square km')),
                ('population', models.PositiveIntegerField(blank=True, help_text='The population at time of data entry.', null=True, verbose_name='Population')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_mod', models.DateField(default=django.utils.timezone.now, verbose_name='Date Modified')),
                ('continent', models.ForeignKey(help_text='The country continent description.', on_delete=django.db.models.deletion.CASCADE, related_name='region_countries', to='regions.continent', verbose_name='Continent')),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('birth_date', models.DateField()),
                ('location', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Persons',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TimeZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zoneName', models.CharField(help_text='Zone official name description (e.g. Asia/Kabul).', max_length=15, verbose_name='Zone Name')),
                ('gmtOffset', models.IntegerField(help_text='Number of hours or minutes a time zone is ahead of or behind GMT.', verbose_name='GMT offset')),
                ('gmtOffsetName', models.CharField(help_text='GMT offset name description (e.g. UTC+04:30).', max_length=10, verbose_name='GMT offset name')),
                ('abbreviation', models.CharField(help_text='GMT offset name abbreviation (e.g. AFT).', max_length=6, verbose_name='GMT offset abbreviation')),
                ('tzName', models.CharField(help_text='Time Zone Name description (e.g. Afghanistan Time).', max_length=55, verbose_name='Time Zone Name')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_mod', models.DateField(default=django.utils.timezone.now, verbose_name='Date Modified')),
            ],
            options={
                'verbose_name_plural': 'TimeZones',
                'ordering': ['zoneName'],
            },
        ),
        migrations.CreateModel(
            name='SubContinent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='SubContinent official name description.', max_length=30, verbose_name='SubContinent Name')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_mod', models.DateField(default=django.utils.timezone.now, verbose_name='Date Modified')),
                ('continent', models.ForeignKey(help_text='The continent description.', on_delete=django.db.models.deletion.CASCADE, related_name='continent_subcontinents', to='regions.continent', verbose_name='Continent')),
            ],
            options={
                'verbose_name_plural': 'SubContinents',
                'ordering': ['continent'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(help_text='Country higher level sub-division (State / Province / Subdivision) description.', max_length=30, verbose_name='State / Province / Subdivision Name')),
                ('state_code', models.CharField(blank=True, help_text='State / province / subdivision code description.', max_length=6, null=True, verbose_name='State / Province / Subdivision Code')),
                ('latitude', models.DecimalField(decimal_places=8, help_text='The Latitude Coordinate.', max_digits=12, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=8, help_text='The Longitude Coordinate.', max_digits=12, verbose_name='Longitude')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_mod', models.DateField(default=django.utils.timezone.now, verbose_name='Date Modified')),
                ('country', models.ForeignKey(help_text='The country of the state.', on_delete=django.db.models.deletion.CASCADE, related_name='country_state', to='regions.country', verbose_name='Country')),
            ],
            options={
                'ordering': ['country', 'state_name'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcity', models.CharField(blank=True, help_text='Subcity/village or ward description.', max_length=30, null=True, verbose_name='SubCity / Village / Ward / Kebele')),
                ('latitude', models.DecimalField(decimal_places=8, help_text='The Latitude Coordinate.', max_digits=12, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=8, help_text='The Longitude Coordinate.', max_digits=12, verbose_name='Longitude')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_mod', models.DateField(default=django.utils.timezone.now, verbose_name='Date Modified')),
                ('city', models.ForeignKey(help_text='The City / Town description.', on_delete=django.db.models.deletion.CASCADE, related_name='city_regions', to='regions.city', verbose_name='City/Town')),
                ('continent', models.ForeignKey(help_text='The country continent description.', on_delete=django.db.models.deletion.CASCADE, related_name='continent_regions', to='regions.continent', verbose_name='Continent')),
                ('country', models.ForeignKey(help_text='The country.', on_delete=django.db.models.deletion.CASCADE, related_name='country_regions', to='regions.country', verbose_name='Country')),
                ('state', models.ForeignKey(help_text='The state sub-country description.', on_delete=django.db.models.deletion.CASCADE, related_name='state_regions', to='regions.state', verbose_name='State/Province')),
                ('subcontinent', models.ForeignKey(help_text='The country subcontinent description.', on_delete=django.db.models.deletion.CASCADE, related_name='subcontinent_regions', to='regions.subcontinent', verbose_name='SubContinent')),
            ],
            options={
                'verbose_name_plural': 'Regions',
                'ordering': ['subcity'],
            },
        ),
        migrations.AddField(
            model_name='country',
            name='subcontinent',
            field=models.ForeignKey(help_text='The country subcontinent description.', on_delete=django.db.models.deletion.CASCADE, related_name='subregion_countries', to='regions.subcontinent', verbose_name='SubContinent'),
        ),
        migrations.AddField(
            model_name='country',
            name='timezones',
            field=models.ManyToManyField(help_text='Country timezones descriptions.', to='regions.TimeZone', verbose_name='Country timezones'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(help_text='The country.', on_delete=django.db.models.deletion.CASCADE, related_name='country_cities', to='regions.country', verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(help_text='The state sub-country description.', on_delete=django.db.models.deletion.CASCADE, related_name='state_cities', to='regions.state', verbose_name='State/Province'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Address user person name.', max_length=30, verbose_name='Address')),
                ('address_01', models.CharField(help_text='Address line one.', max_length=50, verbose_name='Address 1')),
                ('address_02', models.CharField(blank=True, help_text='Address line two.', max_length=50, null=True, verbose_name='Address 2')),
                ('postal_code', models.CharField(help_text='The postal / zip code of the user.', max_length=15, verbose_name='Postal / ZIP Code')),
                ('sub_city', models.CharField(help_text='The sub city or town address.', max_length=30, verbose_name='Sub City / Town')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_mod', models.DateField(default=django.utils.timezone.now, verbose_name='Date Modified')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regions.city', verbose_name='City')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regions.country', verbose_name='Country')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regions.state', verbose_name='State / Province / Zone')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
